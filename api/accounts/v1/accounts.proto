syntax = "proto3";

package api.accounts.v1;

option go_package = "accounts";

import "google/api/annotations.proto";

import "accounts/v1/schema.proto";

service AccountsService {
  rpc IsAuthWithChallenge(Empty) returns (HydraResponse) {}

  rpc IsAuthenticated(Empty) returns (AuthenticateResponse) {
    option (google.api.http) = {
      post: "/v1/accounts",
    };
  }

  rpc SignUp(SignUpRequest) returns (UserResponse) {
    option (google.api.http) = {
      post: "/v1/accounts/signup",
    };
  }

  rpc Authenticate(AuthenticateRequest) returns (UserResponse) {
    option (google.api.http) = {
      post: "/v1/accounts/authenticate",
    };
  }

  rpc EmailExists(EmailExistsRequest) returns (EmailExistsResponse) {
    option (google.api.http) = {
      post: "/v1/accounts/email/exist",
    };
  }
}

message Empty {}

message Body {
  bytes payload = 1;
}

message HydraResponse {
  string challenge = 1;
  string request_url = 2;
  string session_id = 3;
  bool skip = 4;
  string subject = 5;
}

message AuthenticateResponse {
  bool status = 1;
}

message SignUpRequest {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4;
  string confirm_password = 5;
}

message AuthenticateRequest {
  string email = 1;
  string password = 2;
  string captcha_token = 3;
}

message EmailExistsRequest {
  string email = 1;
}

message EmailExistsResponse {
  bool exist = 1;
}

message UserResponse {
  User user = 1;
}

