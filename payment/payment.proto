syntax = "proto3";

package payment;

import "./schema.proto";
import "./stripe.proto";

service PaymentService {
  /*
   * Payment
   */
  rpc CreatePayment(CreatePaymentRequest) returns (CreatePaymentResponse);

  rpc RetrievePayment(RetrievePaymentRequest) returns (RetrievePaymentResponse) {
    option http = {
      post: "/api/v1/payment/retrieve",
    };
  }

  /*
   * Stripe
   */
  rpc AddCard(AddCardRequest) returns (AddCardResponse) {
    option http = {
      post: "/api/v1/payment/s/card/add",
    };
  }

  rpc SetupIntent(SetupIntentRequest) returns (SetupIntentResponse) {
    option http = {
      post: "/api/v1/payment/s/intent/setup",
    };
  }

  rpc StripeCharge(OnStripeChargeRequest) returns (OnStripeChargeResponse) {
    option http = {
      post: "/api/v1/payment/s/onsession/charge",
    };
  }

  rpc TestStripeWebhook(PaymentIntentRequest) returns (Response) {
    option http = {
      post: "/api/v1/payment/stripe/webhook/test",
      body: "*"
    };
  }

  rpc PaymentIntentWebhook(PaymentIntentRequest) returns (Response) {
    option http = {
      post: "/api/v1/payment/stripe/webhook/paymentintent",
      body: "*"
    };
  }
}

message CreatePaymentRequest {
  string user_id = 1;
  string email = 2;
}

message CreatePaymentResponse {
  bool success = 0;
  string object = 1;
  string user = 2;
  string email = 3;
  string default_provider = 4;
  string stripe_customer = 5;
  string stripe = 6;
  repeated Transaction transactions = 7;
  int32 updated = 15;
  int32 created = 16;
}

message RetrievePaymentRequest {
  string user_id = 0;
}

message RetrievePaymentResponse {
  Payment payment = 0;
  bool success = 1;
}

message AddCardRequest {
  string payment_method = 0;
  string user_id = 1;
}

message AddCardResponse {
  repeated PaymentMethod all_cards = 0;
  InvoiceSettings invoice_settings = 1; // default payment
  bool success = 2;
}

message OnStripeChargeRequest {
  string user_id = 0;
  string email = 1;
  Items items = 2;
  string currency = 3;
  double subtotal = 4;
  double total = 5;
  bool off_session = 6;
}

message OnStripeChargeResponse {
  PaymentIntent payment_intent = 0;
  bool success = 1;
}

message SetupIntentRequest {
  string user_id = 0;
  bool on_session  = 1;
}

message SetupIntentResponse {
  bool success = 0;
  string client_secret = 1;
}

message PaymentIntentRequest {
  bytes body = 1;
}

message Response {
  bool success = 0;
}

message Empty {}